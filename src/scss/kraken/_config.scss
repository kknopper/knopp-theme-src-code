// @section Configuration Settings
// Adjust colors, font stacks, breakpoints and sizing.
//
// Typographic Scale
// (For math purposes. Actual font sizes in ems.)
// 1px, 4px, 5px, 8px, 9px, 11px, 12px, 13px, 15px, 16px, 19px, 21px, 24px, 28px, 32px, 48px, 64px, 80px, 96px
// line height: 1.5em on small screens, 1.5625em on big screens


//Grav plugin resets:
.notices p {
	margin-bottom: 0;
	padding: 10px 0;
}

// Colors
$color-primary: #F06925;
// $color-secondary: #96BDC6;
$color-secondary: #08B2E3;

$color-secondary: #65C18D;
$color-secondary: #72B542;
$color-secondary: #65C18D;
$color-secondary: #477998;
// $color-secondary: #588B8B;
// $color-secondary: #002642;
// $color-secondary: #0D1F2D;
$color-tertiary: #72B542;
$color-black: #272727;
$color-white: #ffffff;

$konami-primary: #08B2E3;
$konami-secondary: #588B8B;
$konami-tertiary: $color-primary;

$color-info: #0088cc; // Blue
$color-success: #377f31; // Green
$color-danger: #880e14; // Red
$color-warning: #dba909; // Yellow
$color-code: #dd1144;

$color-gray-dark: #808080;
$color-gray-light: #e5e5e5;

//Theme color config
.theme-color {
	color: $color-primary;
	transition: color 2s ease-in-out;

	&-secondary {
		color: $color-secondary;
		transition: color 2s ease-in-out;

		.konami & {
			color: $konami-secondary;
		}
	}

	&-tertiary {
		color: $color-tertiary;
		transition: color 2s ease-in-out;

		.konami & {
			color: $konami-tertiary;
		}
	}

	.konami & {
		color: $konami-primary;
	}
}

.theme-color-bg {
	background-color: $color-primary;
	fill: $color-primary;
	transition: background-color 2s ease-in-out, fill 2s ease-in-out;

	&-secondary {
		background-color: $color-secondary;
		fill: $color-secondary;
		transition: background-color 2s ease-in-out, fill 2s ease-in-out;

		.konami & {
			background-color: $konami-secondary;
			fill: $konami-secondary;
		}
	}

	&-tertiary {
		background-color: $color-tertiary;
		fill: $color-tertiary;
		transition: all 2s ease-in-out;

		.konami & {
			background-color: $konami-tertiary;
			fill: $konami-tertiary;
		}
	}

	.konami & {
		background-color: $konami-primary;
		fill: $konami-primary;
	}
}

.theme-color-box-shadow-footer {
	&:after {
		box-shadow: 0px 50000px 0px 50000px $color-primary;
		transition: box-shadow 2s ease-in-out;

		.konami & {
			box-shadow: 0px 50000px 0px 50000px $konami-primary;
		}
	}
	
	&-secondary {
		&:after{
			box-shadow: 0px 50000px 0px 50000px $color-secondary;
			transition: box-shadow 2s ease-in-out;

			.konami & {
				box-shadow: 0px 50000px 0px 50000px $konami-secondary;
			}
		}
	}

	&-tertiary {
		&:after {
			box-shadow: 0px 50000px 0px 50000px $color-tertiary;
			transition: box-shadow 2s ease-in-out;

			.konami & {
				box-shadow: 0px 50000px 0px 50000px $konami-tertiary;
			}
		}
	}
}


// Font Stacks
$font-primary: "Montserrat", Arial, sans-serif;
$font-secondary: Georgia, Times, serif;
$font-monospace: Menlo, Monaco, "Courier New", monospace;


// Breakpoints
$bp-xsmall: 20em; 
$bp-small: 30em; //640px+
$bp-medium: 40em;
$bp-medium-large: 45em;
$bp-large: 60em;
$bp-xlarge: 80em;
$bp-xxlarge: 90em;
$bp-xxxlarge: 100em;


// Sizing
$font-size: 100%;
$spacing: 1.5625em;
$container-width: 88%;
$container-max-width: 80em;


// Grid
$grid-margins: 1.4%;
$grid-sizes: (
	// Grid width options
	// Add/remove grids as needed
	// $name: $width
	// $name - {string} class suffix
	// $width - {string} width of the grid
	fourth: 25%,
	third: 33.33333333333%,
	half: 50%,
	two-thirds: 66.666666666667%,
	three-fourths: 75%,
	full: 100%
);
$grid-breakpoints: (
	// Breakpoints at which to activate grid
	// Add/remove breakpoints as needed
	// ($breakpoint, $prefix-class, $include-offsets)
	// $breakpoint - {string|variable} the breakpoint
	// $prefix-class - {string|optional} class to be used with `.row` to activate grid
	// $include-offsets - {boolean} if true, include offset classes at this breakpoint
	($bp-xsmall, ".row-start-xsmall", false),
	($bp-small, ".row-start-small", false),
	($bp-medium, null, true),
);
$grid-dynamic: (
	// Create grid classes that vary in size at different breakpoints
	// Add/remove classes, breakpoints, and sizes as needed
	// ($class, $breakpoint, $width)
	// $class - {string} the grid class
	// $breakpoint - {string|variable} the breakpoint
	// $width - {string|variable} width of the grid at the breakpoint
	(".grid-dynamic", $bp-xsmall, map-get($grid-sizes, half))
	(".grid-dynamic", $bp-small, map-get($grid-sizes, third))
	(".grid-dynamic", $bp-medium, map-get($grid-sizes, fourth))
);
